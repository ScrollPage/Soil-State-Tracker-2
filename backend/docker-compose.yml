version: '3'

services:

  nginx:
    container_name: nginx
    build: ./nginx
    ports:
      - 8000:80
    depends_on: 
      - web
    volumes: 
      - static_volume:/home/app/web/staticfiles

  db:
    container_name: web_timescaledb
    image: timescale/timescaledb:2.0.0-pg12
    volumes: 
      - pg_data:/var/lib/postgresql/data/
    environment: 
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_db=postgres

  grafana:
    image: grafana/grafana
    # depends_on:
    #     - prometheus
    ports:
      - 3001:3000
    volumes:
      - ./grafana:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    restart: always

  # netdata:
  #   container_name: netdata
  #   restart: always
  #   image: netdata/netdata
  #   cap_add:
  #     - SYS_PTRACE
  #   security_opt:
  #     - apparmor:unconfined
  #   depends_on: 
  #     - nginx
  #   ports: 
  #     - 19999:19999
  #   volumes:
  #     - /proc:/host/proc:ro
  #     - /sys:/host/sys:ro
  #     - /var/run/docker.sock:/var/run/docker.sock:ro

  redis:
    container_name: redis
    image: redis
    ports:
      - 6379:6379
    volumes:
      - redis_data:/var/lib/redis/data/
    restart: always

  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: prometheus
  #   ports:
  #     - 9090:9090
  #   command:
  #     - --config.file=/etc/prometheus/prometheus.yml
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
  #   depends_on:
  #     - cadvisor

  # cadvisor:
  #   image: gcr.io/cadvisor/cadvisor:latest
  #   container_name: cadvisor
  #   ports:
  #     - 8080:8080
  #   volumes:
  #     - /:/rootfs:ro
  #     - /var/run:/var/run:rw
  #     - /sys:/sys:ro
  #     - /var/lib/docker/:/var/lib/docker:ro
  #   depends_on:
  #     - redis

  web:
    container_name: web
    build:
      context: ./
      dockerfile: Dockerfile
    command: bash -c "gunicorn backend.wsgi:application --bind 0.0.0.0:8000"
    volumes: 
      - static_volume:/home/app/web/staticfiles
    expose: 
      - 8000
    env_file:
      - ./.env
    depends_on: 
      - db
      - redis

volumes: 
  pg_data:
  static_volume:
  redis_data: